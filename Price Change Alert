using System;

class PriceChangeAlert
{
    static void Main()
    {
        int n = int.Parse(Console.ReadLine());
        double range = double.Parse(Console.ReadLine());
        double currentPrice = double.Parse(Console.ReadLine());

        for (int i = 0; i < n - 1; i++)
        {
            double newPrice = double.Parse(Console.ReadLine());
            double differenceInPercent = CalculatePercentage(currentPrice, newPrice);

            bool isSignificantDifference = IsItDifferent(differenceInPercent, range);

            string message = CalculatingTheDifference(newPrice, currentPrice, differenceInPercent, isSignificantDifference);
            Console.WriteLine(message);

            currentPrice = newPrice;
        }
    }

    static string CalculatingTheDifference(double newPrice, double currentPrice, double differenceInPercentage, bool etherTrueOrFalse)
    {
        string differenceInPrice = string.Empty;
        if (differenceInPercentage == 0)
        {
            differenceInPrice = string.Format("NO CHANGE: {0}", newPrice);
        }
        else if (!etherTrueOrFalse)
        {
            differenceInPercentage *= 100;
            differenceInPrice = string.Format("MINOR CHANGE: {0} to {1} ({2:F2}%)", currentPrice, newPrice, differenceInPercentage);
        }
        else if (etherTrueOrFalse && (differenceInPercentage > 0))
        {
            differenceInPercentage *= 100;
            differenceInPrice = string.Format("PRICE UP: {0} to {1} ({2:F2}%)", currentPrice, newPrice, differenceInPercentage);
        }
        else if (etherTrueOrFalse && (differenceInPercentage < 0))
        {
            differenceInPercentage *= 100;
            differenceInPrice = string.Format("PRICE DOWN: {0} to {1} ({2:F2}%)", currentPrice, newPrice, differenceInPercentage);
        }
        return differenceInPrice;
    }

    static bool IsItDifferent(double differentInPercent, double range)
    {
        if (Math.Abs(differentInPercent) >= range)
        {
            return true;
        }
        return false;
    }

    static double CalculatePercentage(double currentPrice, double newPrice)
    {
        double percent = (newPrice - currentPrice) / currentPrice;
        return percent;
    }
}
